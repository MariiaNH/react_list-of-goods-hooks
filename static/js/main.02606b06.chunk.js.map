{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isStarted","setIsStarted","isReversed","setIsReversed","NONE","sortBy","setSortBy","visibleGoods","sort","good1","good2","ALPABET","localeCompare","LENGTH","length","reverse","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"wJAiBKA,E,4CAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,kBAAAA,E,gBAAAA,E,mBAAAA,M,KAOE,IAAME,EAAU,WACrB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA4BJ,mBAASH,EAASQ,MAA9C,mBAAOC,EAAP,KAAeC,EAAf,KAEMC,EAAY,UAAOV,GAiBzB,OAfAU,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQL,GACN,KAAKT,EAASe,QACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKd,EAASiB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,QACE,OAAO,MAITZ,GACFK,EAAaQ,UAIb,qBAAKC,UAAU,MAAf,SACIhB,EAUE,qCACE,sBAAKgB,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAMZ,EAAUV,EAASe,UAFpC,iCAOA,wBACEM,KAAK,SACLC,QAAS,kBAAMZ,EAAUV,EAASiB,SAFpC,4BAOA,wBACEI,KAAK,SACLC,QAAS,kBAAMf,GAAeD,IAFhC,qBAOA,wBACEe,KAAK,SACLC,QAAS,WACPf,GAAc,GACdG,EAAUV,EAASQ,OAJvB,sBAWF,oBAAIY,UAAU,QAAd,SACGT,EAAaY,KAAI,SAAAC,GAAI,OACpB,oBACEJ,UAAU,cADZ,SAIGI,GAFIA,WA9Cb,wBACEH,KAAK,SACLC,QAAS,kBAAMjB,GAAcD,IAF/B,sBC/CVqB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.02606b06.chunk.js","sourcesContent":["import { FC, useState } from 'react';\nimport './App.css';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'NONE',\n  ALPABET = 'ALPABET',\n  LENGTH = 'LENGTH',\n  REVERSE = 'REVERSE',\n}\n\nexport const App: FC = () => {\n  const [isStarted, setIsStarted] = useState(false);\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortBy, setSortBy] = useState(SortType.NONE);\n\n  const visibleGoods = [...goodsFromServer];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortBy) {\n      case SortType.ALPABET:\n        return good1.localeCompare(good2);\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return (\n    <div className=\"App\">\n      {!isStarted\n        ? (\n          <button\n            type=\"button\"\n            onClick={() => setIsStarted(!isStarted)}\n          >\n            Start\n          </button>\n        )\n        : (\n          <>\n            <div className=\"buttons\">\n              <button\n                type=\"button\"\n                onClick={() => setSortBy(SortType.ALPABET)}\n              >\n                Sort alphabetically\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={() => setSortBy(SortType.LENGTH)}\n              >\n                Sort by length\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={() => setIsReversed(!isReversed)}\n              >\n                Reverse\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={() => {\n                  setIsReversed(false);\n                  setSortBy(SortType.NONE);\n                }}\n              >\n                Reset\n              </button>\n            </div>\n\n            <ul className=\"Goods\">\n              {visibleGoods.map(good => (\n                <li\n                  className=\"Goods__item\"\n                  key={good}\n                >\n                  {good}\n                </li>\n              ))}\n            </ul>\n          </>\n        )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}